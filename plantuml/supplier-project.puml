@startuml

hide circle
hide methods

package "Google Drive\n" <<Cloud>> {
  package "Google Sheets" <<Rectangle>> {
    class "ProjectSheet" {
      -sheetId
      -WKT
      -totalAcres
      -regenAdoptionYear
      -pre2000Management
      -pre2000Tillage
      -pre1980Management
      -pre2000CRP
      -CRPStartYear
      -CRPEndYear
      -CRPType
      -...cropYears
    }
  }
}

package GCP <<Cloud>> {
  package BigQuery <<Rectangle>> {
    package "Project: nori-website-prod" <<Folder>> {
      package "Dataset: supplierProjectKey" <<Folder>> {
        class "Table: SupplierProjectFieldSetId" {
          -GeoJSON
          +label: fieldSet
          +name: fieldSetName
        }

        note left of "Table: SupplierProjectFieldSetId"
          <b>Primary user:</b>Supplier
          <b>Secondary user:</b>Verifier

          <b>About this data:</b>
          Geographic data for a
          supplier's field set. Used
          to generate a map view.
        end note
      }
    }
  }

  package DataStore <<Rectangle>> {

    class BuyerProfile {
      -id
      -timeCreated
      -timeUpdated
    }

    class SupplierProfile {
      -id
      -timeCreated
      -timeUpdated
    }

    class Bid {
      -id
      -auctionId
      -timeCreated
      -timeUpdated
      -price
      -quantity
    }

    class Offer {
      -id
      -auctionId
      -timeCreated
      -timeUpdated
      -price
      -quantity
    }

    class Auction {
      -id
      -timeCreated
      -timeUpdated
      -startTime
      -endTime
    }

    class ForwardContract {
      -auctionId
      -id
      -timeCreated
      -timeUpdated
      -bidId
      -offerId
    }

    class CRCData {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -rawData
    }

    class User {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -privateKey
      -profileKey
      -firebaseUID
      -firebaseUser
    }

    class UserProfile {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -type
      -UserKey
    }

    class SupplierProject {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -name
      -UserProfileKey
    }

    class SupplierProjectCometReport {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -fieldSetKey
      -type
      -subType
      -BiomassBurningCH4Uncertainty
      -BiomassBurningCH4
      -WetlandRiceCultivationCH4Uncertainty
      -WetlandRiceCultivationCH4
      -SoilCH4Uncertainty
      -LimingCO2Uncertainty
      -SoilCarbonStockEnd
      -LimingCO2
      -UreaFertilizationCO2Uncertainty
      -SoilCH4
      -SoilCarbonStock2000
      -SoilCarbonUncertainty
      -UreaFertilizationCO2
      -SoilCarbon
      -DrainedOrganicSoilsCO2
      -SoilN2OUncertainty
      -BiomassBurningCarbonUncertainty
      -WetlandRiceCultivationN2OUncertainty
      -SoilCarbonStockBegin
      -DrainedOrganicSoilsN2O
      -SoilN2O
      -BiomassBurningCarbon
      -WetlandRiceCultivationN2O
      -DrainedOrganicSoilsCO2Uncertainty
      -BiomassBurningN2O
      -BiomassBurningN2OUncertainty
      -DrainedOrganicSoilsN2OUncertainty
    }

    class SupplierProjectFieldSet {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -supplierProjectKey
      -selectedSupplierProjectCometReportKey
      -name
      -sheetId
      -WKT
      -totalAcres
      -regenAdoptionYear
      -pre2000Management
      -pre2000Tillage
      -pre1980Management
      -pre2000CRP
      -CRPStartYear
      -CRPEndYear
      -CRPType
    }

    class VerifierJob {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -supplierProjectKey
      -projectComplete
      -projectCertainty
      -projectValid
      -comment
      -verifierSignature
      -supplierSignature
    }

    note right of SupplierProjectCometReport
      <b>Primary user:</b> Supplier

      <b>Nori uses this for:</b>
      - generating a project + crc score
      - supplier uses this info to compare
      scenario potentials

      <b>About this data:</b>
      This data comes from the "summary" sections
      at the end of a COMET API response.

      There are 2 categories of this data
      (indicated by "type"):
      - Baseline: a scenario projection for the
      case that the supplier continues practices
      that reflect his historic practices
      - Conservation: a scenario projection for
      the case that the supplier changes
      practices to something else (this is
      indicated by a subType: i.e.
      "conversion to non-legume grassland").

      There are effectively 5 sections within
      this data:
      - Carbon measurements
      - CO2 measurements
      - CH4 measurements
      - N2O measurements
      - Soil carbon stock changes through time
    end note

    class ContactInformation {
      -id
      -timeCreated
      -timeUpdated
      -isDeleted
      -ownerKey
      -type
      -firstName
      -lastName
      -company?
      -phone
      -email
      -address1
      -address2?
      -county
      -city
      -state
      -postalCode
    }
  }
}


package "/app/supplier/project-page?projectId=supplierProjectKey" <<Rectangle>> {
  package WizardForm <<Rectangle>> {
    package Contacts <<Rectangle>> {
      note as ContactsNote
        This contains
        data which can
        be read/written
        to ContactInformation
      end note
    }

    package "Land Management" <<Rectangle>> {
      note as landManagementNote
        This contains
        a map view
        of the field sets
        read from
        FieldSet_FieldSetName

        It also contains the link to
        the related ProjectSheet
      end note
    }

    package "CRC Estimate" <<Rectangle>> {
      package "Scenario Selection" <<Rectangle>> {
        note as scenarioSelectionNote
          We will need a way
          to calculate a
          score as well as
          to store the selected
          scenario in CRCData
        end note
      }

      package "Run Report" <<Rectangle>> {
        note as RunReportNote
          <b>Primary user:</b> Supplier

          <b>Nori uses this for:</b>
          Generating a COMET API input file.

          <b>About this data:</b>
          We parse this data from the
          SupplierProjectFieldSet sheets,
          create a COMET API input XML
          and then store the returned
          summary for parsing into a
          CRC Estimate
        end note
      }

      package "CRC Estimate Table" <<Rectangle>> {
        package "Conservation Scenario" <<Rectangle>> {
          note as conservationScenarioNote
            This contains data
            from SupplierProjectCometReport
            where type =
            Conservation
          end note
        }

        package "Baseline Scenario" <<Rectangle>> {
          note as baselineScenarioNote
            This contains data
            from SupplierProjectCometReport
            where type =
            Baseline
          end note
        }
      }
    }

    package "Verification" <<Rectangle>> {

    }
  }
}




UserProfile o-- SupplierProject
UserProfile o-- ContactInformation

ContactInformation .. Contacts

User o-- UserProfile

User o-- SupplierProfile
User o-- BuyerProfile

SupplierProfile o-- Offer
BuyerProfile o-- Bid

Auction o-- Bid
Auction o-- Offer

ForwardContract o-- Auction
ForwardContract o-- Bid
ForwardContract o-- Offer

SupplierProjectCometReport .. "CRC Estimate"

SupplierProject o-- ContactInformation
SupplierProject o-- SupplierProjectFieldSet
SupplierProject .. "Dataset: supplierProjectKey"

VerifierJob o-- SupplierProject
VerifierJob .. Verification

SupplierProjectFieldSet o-- SupplierProjectCometReport
SupplierProjectFieldSet o-- CRCData
SupplierProjectFieldSet -- ProjectSheet
SupplierProjectFieldSet .. "Table: SupplierProjectFieldSetId"

ProjectSheet .. "Land Management"
ProjectSheet .. "Run Report"

CRCData .. "Scenario Selection"

"Table: SupplierProjectFieldSetId" .. "Land Management"

@enduml